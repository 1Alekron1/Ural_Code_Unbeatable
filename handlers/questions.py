import asyncio
from io import BytesIO

from aiogram import Router, F, types
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from docx import Document

from doc_file_an import check


router = Router()

def save_word_document(filename, content):
    document = Document()
    document.add_paragraph(content)
    document.save(filename)

@router.message(F.document)
async def handle_document(message: Message, state: FSMContext):
    document = message.document

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Ñ–∞–π–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    await message.answer("–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω! –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
    file_info = await message.bot.get_file(document.file_id)
    downloaded_file = await message.bot.download_file(file_info.file_path)

    result = check(downloaded_file)


    processed_file_path = "–ò—Å—Ö–æ–¥–Ω–∏–∫ —Å –ø—Ä–∞–≤–∫–∞–º–∏.docx"


    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ
    processed_file = FSInputFile(processed_file_path)
    await message.answer_document(processed_file)

    formatted_message = (
        "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n\n"
        "üîπ –í–≤–µ–¥–µ–Ω–∏–µ: {–í–≤–µ–¥–µ–Ω–∏–µ}\n\n"
        "üîπ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: {–ó–∞–∫–ª—é—á–µ–Ω–∏–µ}\n\n"
        "üîÑ –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –í–≤–µ–¥–µ–Ω–∏—è –∏ –ó–∞–∫–ª—é—á–µ–Ω–∏—è –ø–æ —Å–º—ã—Å–ª—É: {test}\n\n"
        "üìë –ù–∞–π–¥–µ–Ω—ã —Ä–∞–∑–¥–µ–ª—ã: {–ù–∞–π–¥–µ–Ω—ã_—Ä–∞–∑–¥–µ–ª—ã}\n\n"
        "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑–¥–µ–ª—ã: {–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç_—Ä–∞–∑–¥–µ–ª—ã}\n\n"
        "üîó –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ: {–ù–∞–π–¥–µ–Ω–Ω—ã–µ_—Å—Å—ã–ª–∫–∏_–≤_—Ç–µ–∫—Å—Ç–µ}\n\n"
        "‚ùå –û—à–∏–±–∫–∞: {–û—à–∏–±–∫–∞}\n\n"
        "üìö –ù–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã: {–ù–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ_—Å—Å—ã–ª–∫–∏}"
    ).format(
        –í–≤–µ–¥–µ–Ω–∏–µ=result['–í–≤–µ–¥–µ–Ω–∏–µ'] or '–ù–µ –Ω–∞–π–¥–µ–Ω–æ',
        –ó–∞–∫–ª—é—á–µ–Ω–∏–µ=result['–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'] or '–ù–µ –Ω–∞–π–¥–µ–Ω–æ',
        test=result["–ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –í–≤–µ–¥–µ–Ω–∏—è –∏ –ó–∞–∫–ª—é—á–µ–Ω–∏—è –ø–æ —Å–º—ã—Å–ª—É"] or '–ù–µ –Ω–∞–π–¥–µ–Ω–æ',
        –ù–∞–π–¥–µ–Ω—ã_—Ä–∞–∑–¥–µ–ª—ã=', '.join(result['–ù–∞–π–¥–µ–Ω—ã —Ä–∞–∑–¥–µ–ª—ã']) or '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç',
        –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç_—Ä–∞–∑–¥–µ–ª—ã=', '.join(result['–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑–¥–µ–ª—ã']) or '–í—Å–µ —Ä–∞–∑–¥–µ–ª—ã –Ω–∞–π–¥–µ–Ω—ã',
        –ù–∞–π–¥–µ–Ω–Ω—ã–µ_—Å—Å—ã–ª–∫–∏_–≤_—Ç–µ–∫—Å—Ç–µ=', '.join(map(str, result['–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ'])) or '–ù–µ –Ω–∞–π–¥–µ–Ω—ã',
        –û—à–∏–±–∫–∞=result['–û—à–∏–±–∫–∞'] or '–û—à–∏–±–æ–∫ –Ω–µ—Ç',
        –ù–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ_—Å—Å—ã–ª–∫–∏=', '.join(
            map(str, result['–ù–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã'])
        ) or '–ù–µ—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫'
    )


    save_word_document("Review.docx", formatted_message)

    second_file = "Review.docx"
    processed_file_2 = FSInputFile(second_file)
    await message.answer_document(processed_file_2)
